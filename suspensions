# -*- coding: utf-8 -*-

# import packages
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import pingouin as pg
from scipy.stats import linregress
from scipy import stats
import decimal
from decimal import Decimal

# import data from crdc
suspensions = pd.read_csv('/Users/max/Library/Mobile Documents/com~apple~CloudDocs/Data/2017-18 Public-Use Files/Data/SCH/CRDC/CSV/Suspensions.csv',low_memory=False)
enrollments = pd.read_csv('/Users/max/Library/Mobile Documents/com~apple~CloudDocs/Data/2017-18 Public-Use Files/Data/SCH/CRDC/CSV/Enrollment.csv',low_memory=False)
file_encoding = 'utf8'  # decode error fix for utf-8
input_fd = open('/Users/max/Library/Mobile Documents/com~apple~CloudDocs/Data/2017-18 Public-Use Files/Data/SCH/CRDC/CSV/School_Characteristics.csv', encoding=file_encoding, errors = 'backslashreplace')
school_characteristics = pd.read_csv(input_fd,low_memory=False)

# select fields for analysis 
suspensions_fields = ['COMBOKEY','SCH_DISCWODIS_ISS_BL_M','SCH_DISCWODIS_ISS_BL_F','SCH_DISCWODIS_ISS_WH_M','SCH_DISCWODIS_ISS_WH_F','SCH_DISCWDIS_ISS_IDEA_BL_M','SCH_DISCWDIS_ISS_IDEA_BL_F','SCH_DISCWDIS_ISS_IDEA_WH_M','SCH_DISCWDIS_ISS_IDEA_WH_F']
enrollments_fields = ['COMBOKEY','SCH_ENR_BL_M','SCH_ENR_BL_F','SCH_ENR_WH_M','SCH_ENR_WH_F','SCH_IDEAENR_BL_M','SCH_IDEAENR_BL_F','SCH_IDEAENR_WH_M','SCH_IDEAENR_WH_F']
characteristics_fields = ['COMBOKEY','LEAID','LEA_STATE','LEA_NAME','SCH_NAME','SCH_GRADE_G09','SCH_GRADE_G10','SCH_GRADE_G11','SCH_GRADE_G12','SCH_STATUS_SPED','SCH_STATUS_MAGNET','SCH_STATUS_CHARTER','SCH_STATUS_ALT']
suspensions = suspensions[suspensions_fields]
enrollments = enrollments[enrollments_fields]
school_characteristics = school_characteristics[characteristics_fields]

# combine data and filter for hs
suspensions_rawdata = school_characteristics.merge(enrollments,on='COMBOKEY').merge(suspensions,on='COMBOKEY')
suspensions_rawdata = suspensions_rawdata[(suspensions_rawdata.SCH_GRADE_G09 == 'Yes') & (suspensions_rawdata.SCH_GRADE_G10 == 'Yes') & (suspensions_rawdata.SCH_GRADE_G11 == 'Yes') & (suspensions_rawdata.SCH_GRADE_G12 == 'Yes')]

# clean data
reserve_codes = [-3,-5,-6,-8,-9,-11]
reserve_codes_replace = [0,0,0,0,0,0]
suspensions_rawdata.replace(reserve_codes,reserve_codes_replace,inplace=True)

# roll-up to lea
suspensions_rawdata2 = suspensions_rawdata.groupby('LEAID',as_index=False).sum().reset_index(drop=True)

# sanity check
print(suspensions_rawdata2.columns)

# calculate enrollment denominator
suspensions_rawdata2['white_enrollment'] = suspensions_rawdata2.SCH_ENR_WH_M + suspensions_rawdata2.SCH_ENR_WH_F
suspensions_rawdata2['black_enrollment'] = suspensions_rawdata2.SCH_ENR_BL_M + suspensions_rawdata2.SCH_ENR_BL_F

# calculate suspensions numerator 
suspensions_rawdata2['white_suspensions'] = suspensions_rawdata2.SCH_DISCWODIS_ISS_WH_M + suspensions_rawdata2.SCH_DISCWODIS_ISS_WH_F + suspensions_rawdata2.SCH_DISCWDIS_ISS_IDEA_WH_M + suspensions_rawdata2.SCH_DISCWDIS_ISS_IDEA_WH_F
suspensions_rawdata2['black_suspensions'] = suspensions_rawdata2.SCH_DISCWODIS_ISS_BL_M + suspensions_rawdata2.SCH_DISCWODIS_ISS_BL_F + suspensions_rawdata2.SCH_DISCWDIS_ISS_IDEA_BL_M + suspensions_rawdata2.SCH_DISCWDIS_ISS_IDEA_BL_F

# calculate suspension rate metric 
suspensions_rawdata2['white_suspensions_rate'] = (suspensions_rawdata2.white_suspensions) / (suspensions_rawdata2.white_enrollment)
suspensions_rawdata2['black_suspensions_rate'] = (suspensions_rawdata2.black_suspensions) / (suspensions_rawdata2.black_enrollment)

# calculate demographics indicator
suspensions_rawdata2['blackwhite_enrollment_factor'] = (suspensions_rawdata2.black_enrollment) / (suspensions_rawdata2.white_enrollment)

# clean calculations
suspensions_rawdata2.replace([np.inf,-np.inf],np.nan,inplace=True)
suspensions_rawdata2.dropna(inplace=True)

# rename primary dataframe and select fields for analysis
suspensions_hs_rawdata = suspensions_rawdata2[['LEAID','blackwhite_enrollment_factor','white_suspensions_rate','black_suspensions_rate']]

# remove outliers from primary dataframe
suspensions_hs_rawdata = suspensions_hs_rawdata[(np.abs(stats.zscore(suspensions_hs_rawdata.white_suspensions_rate,nan_policy='omit')) < 3)]
suspensions_hs_rawdata = suspensions_hs_rawdata[(np.abs(stats.zscore(suspensions_hs_rawdata.black_suspensions_rate,nan_policy='omit')) < 3)]

# Sanity Check
print(suspensions_hs_rawdata[['LEAID','black_suspensions_rate','white_suspensions_rate']].sort_values('black_suspensions_rate',ascending=False).head(10))

# transform primary dataframe for analysis
suspensions_hs_transdata = suspensions_hs_rawdata.melt(id_vars = ['LEAID','blackwhite_enrollment_factor'],value_vars = ['white_suspensions_rate','black_suspensions_rate'],var_name = 'ethnicity',value_name='suspension_rate')

# Background: Suspensions, especially out-of-school suspensions, result in lost learning, which is never entirely recovered.  Many times this lost learning compounds into failure to graduate on-time or failure to graduate at all (cite source).  
# Background (Cont): Graduating has immense economic benefits and individuals who fail to graduate are much more likely to be arrested and join the school-to-prison pipeline (cite source). 
# Question: Are black and white high school students suspended in the same way?

# At what rate are black and white high school students suspended
sns.set_style('dark')
sns.axes_style('darkgrid')
sns.set_context('paper')
ratecomp = sns.catplot(data=suspensions_hs_transdata,x='ethnicity',y='suspension_rate',kind='bar',errorbar=None,palette='colorblind')
ratecomp.fig.suptitle('Out-of-School Suspension Rates')
plt.show()
print(suspensions_hs_transdata.groupby('ethnicity').suspension_rate.mean())

# We see that black high school students are nearly twice as likely to be suspended out-of-school than white high school students, on average per school.
# Do the rate distributions differ for black and white high school students?
black_rates = suspensions_hs_transdata[suspensions_hs_transdata['ethnicity']=='black_suspensions_rate']['suspension_rate']
white_rates = suspensions_hs_transdata[suspensions_hs_transdata['ethnicity']=='white_suspensions_rate']['suspension_rate']
plt.hist(black_rates,bins=40,range=(0,1),alpha=0.8,density=True,histtype='bar',label='black')
plt.hist(white_rates,bins=40,range=(0,1),alpha=0.4,density=True,histtype='bar',label='white')
plt.legend()
plt.xlabel('out-of-school suspension rate')
plt.ylabel('percent of schools')
plt.show()

# We see that for both black and white high school students suspension rates mostly fall between 0% and 2.5%.  
# For white high school students there is an almost an exponential decay trend between 2.5% and 20%.  However, for black high school students rates range almost uniformally from 2.5% to 42.5%.
# Do high suspension rates occur in the sames schools for each student group?
plt.plot('white_suspensions_rate','black_suspensions_rate',data=suspensions_hs_rawdata,linestyle='',marker='o',markersize=0.7,alpha=0.5)
plt.xlabel('White Suspension Rate')
plt.ylabel('Black Suspension Rate')
plt.title('Student Group Rates Per School')
plt.ylim(0, 1)
plt.xlim(0, 1)
plt.show()

# We see a bit of overlapping that makes it hard to make a conclusion.  However, if we take a random sample of schools the picture is clearer.
suspensions_hs_rawdata_sample = suspensions_hs_rawdata.sample(n=1000, random_state=1)
plt.plot('white_suspensions_rate','black_suspensions_rate',data=suspensions_hs_rawdata_sample,linestyle='',marker='o',markersize=0.7,alpha=0.5)
plt.xlabel('White Suspension Rate')
plt.ylabel('Black Suspension Rate')
plt.title('Student Group Rates Per School')
plt.ylim(0, 1)
plt.xlim(0, 1)
plt.show()

# We can see a positive linear trend. As white high school student suspension rates so do black high school student rates.  However, the trendline is somewhat steep indicating that black rates are higher most of the time.
# Are black high school students suspended at a different rate?
alpha = 0.01
black = suspensions_hs_rawdata.black_suspensions_rate.sample(n=100,random_state=2)
white = suspensions_hs_rawdata.white_suspensions_rate.sample(n=100,random_state=2)
ttest = pg.ttest(x=black,y=white,paired=False,alternative='greater')
print(ttest['p-val'])

# p-value < alpha: reject the null hypothesis
# So, black high school students have statistically higher suspension rate than white high school students

# However there is risk of a type II error (rejecting the null when its true) because its debatable if we can use a parametric test given suspension rate distributions.
# Using a nonparametric test (mwu) gives a much confusing answer.
# Wilcoxon-Mann-Whitney Test - Null Hypothesis: There is no significant difference between the suspension rates of the two groups in the population.
mwutest = pg.mwu(x=black,y=white,alternative='greater')

# Conclusion: There is a difference in the way black and white high school students are suspended. Per testing, we can say that black high school students are suspended at higher rates.
# Many factors go into this inequity, so massive change is needed to do better for our black students.  
 
